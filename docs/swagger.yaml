basePath: /api
definitions:
  Author:
    properties:
      id:
        example: 123
        type: integer
      name:
        example: Ilya
        type: string
      surname:
        example: Sokolov
        type: string
    type: object
  CreateAuthorInput:
    properties:
      name:
        example: Ilya
        type: string
      surname:
        example: Sokolov
        type: string
    type: object
  CreateGenreInput:
    properties:
      genre:
        example: fantasy
        type: string
    type: object
  CreateLanguageInput:
    properties:
      language:
        example: ru
        type: string
    type: object
  CreateUserInput:
    properties:
      address:
        example: Russia, Moscow, Malaya Semenovskaya, 12
        type: string
      email:
        example: admin@example.com
        type: string
      password:
        example: qwERty123
        type: string
      phoneNumber:
        example: "88005553535"
        type: string
      repeatPassword:
        example: qwERty123
        type: string
      username:
        example: admin
        type: string
    type: object
  ErrorResponse:
    properties:
      code:
        type: integer
      developerMessage:
        type: string
      message:
        type: string
    type: object
  Genre:
    properties:
      genre:
        example: fantasy
        type: string
      id:
        example: 123
        type: integer
    type: object
  Language:
    properties:
      id:
        example: 123
        type: integer
      language:
        example: ru
        type: string
    type: object
  UpdateAuthorInput:
    properties:
      name:
        example: Ilya
        type: string
      surname:
        example: Sokolov
        type: string
    type: object
  UpdateAuthorPartiallyInput:
    properties:
      name:
        example: Ilya
        type: string
      surname:
        example: Sokolov
        type: string
    type: object
  UpdateGenreInput:
    properties:
      genre:
        example: fantasy
        type: string
    type: object
  UpdateLanguageInput:
    properties:
      language:
        example: en
        type: string
    type: object
  UpdateUserInput:
    properties:
      address:
        example: Russia, Moscow, Malaya Semenovskaya, 12
        type: string
      email:
        example: admin@example.com
        type: string
      oldPassword:
        example: qwERty123
        type: string
      phoneNumber:
        example: "88005553535"
        type: string
      username:
        example: admin
        type: string
    type: object
  UpdateUserPartiallyInput:
    properties:
      address:
        example: Russia, Moscow, Malaya Semenovskaya, 12
        type: string
      email:
        example: admin@example.com
        type: string
      newPassword:
        example: nEwPas5worD
        type: string
      oldPassword:
        example: qwERty123
        type: string
      phoneNumber:
        example: "88005553535"
        type: string
      username:
        example: admin
        type: string
    type: object
  User:
    properties:
      address:
        type: string
      email:
        example: admin@example.com
        type: string
      id:
        example: 123
        type: integer
      phoneNumber:
        type: string
      registeredAt:
        example: 2022/02/24
        type: string
      username:
        example: admin
        type: string
      verified:
        example: true
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for ReadyRead book shop.
  title: ReadyRead API
  version: 1.0.0
paths:
  /authors:
    post:
      consumes:
      - application/json
      description: Register a new author.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/CreateAuthorInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create author
      tags:
      - authors
  /authors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete author with specified id.
      parameters:
      - description: Author id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete author
      tags:
      - authors
    get:
      consumes:
      - application/json
      description: Get author by id.
      parameters:
      - description: Author id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Author'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Show author information
      tags:
      - authors
    patch:
      consumes:
      - application/json
      description: Partially update author with specified id.
      parameters:
      - description: Author id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateAuthorPartiallyInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update author
      tags:
      - authors
    put:
      consumes:
      - application/json
      description: Update author with specified id.
      parameters:
      - description: Author id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateAuthorInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user
      tags:
      - authors
  /genres:
    post:
      consumes:
      - application/json
      description: Insert genre in database.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/CreateGenreInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Genre'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create genre
      tags:
      - genres
  /genres/{id}:
    delete:
      consumes:
      - application/json
      description: Delete genre with specified id.
      parameters:
      - description: Genre id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete genre
      tags:
      - genres
    get:
      consumes:
      - application/json
      description: Get genre by id.
      parameters:
      - description: Genre id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Genre'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Show genre information
      tags:
      - genres
    put:
      consumes:
      - application/json
      description: Update genre with specified id.
      parameters:
      - description: Genre id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateGenreInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update genre
      tags:
      - genres
  /languages:
    post:
      consumes:
      - application/json
      description: Insert language in database.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/CreateLanguageInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Language'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create language
      tags:
      - languages
  /languages/{id}:
    delete:
      consumes:
      - application/json
      description: Delete language with specified id.
      parameters:
      - description: Language id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete genre
      tags:
      - languages
    get:
      consumes:
      - application/json
      description: Get language by id.
      parameters:
      - description: Language id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Language'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Show language information
      tags:
      - languages
    put:
      consumes:
      - application/json
      description: Update language with specified id.
      parameters:
      - description: Language id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateLanguageInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update language
      tags:
      - languages
  /users:
    get:
      consumes:
      - application/json
      description: Get user by email and password.
      parameters:
      - description: user email
        in: query
        name: email
        required: true
        type: string
      - description: user raw password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get user by email and password from query parameters
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Register a new user.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the user by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Show user information
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Partially update the user with provided current password.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPartiallyInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the user with provided current password.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user
      tags:
      - users
swagger: "2.0"
